#t
#f
#f
123
123.45345
#\x
#\newline
"yolo"
asdfsa
yolo
'#t
'#f
'123.45
'#b0
'123/345
'#o#i777+100i
'#\c
'#\newline
'"yolo"
'fsdfsdf
'fsdfsdf
'()
'(1)
'(#t #f)
'(#\c)
'(#\newline)
'("yolo" #t)
'(a b #\c 12.34 fea12)
'((()))
'((a b) (c d))
'((a) ("yolo") #\c)
'(() . 123.234)
'(123 . 456)
'(#\newline #\c "yolo" . attr)
'(() . ())
''()
'`()
', ()
',@()
',@ "yolo"
',@ yolo
(if 123 #t #f)
(if #\c #t #f)
(if #t #t #f)
(if '() #t #f)
(if #\newline #t #f)
(if '"yolo" #t #f)
(if '(1) "yolo" #f)
(if 12.123123 #f)
(if #f #t #f)
(if #f #t 12.123123)
(if #t '())
(if "yolo" '())
(if '() ())
(if #t '())
(if #f '())
(if '(1) '() #f)
(if #f #t #f)
(if #t 12.123123 #f)
(if #f #t 12.123123)
(if #f #t 12.123123)
(if #f #t 12.123123)
(set! abcde (if #f #t 12.123123))
(set! abcde '(#\newline #\c "yolo" . attr))
(set! abcde 12.123123)
(set! abcde 12)
(set! abcde #t)
(set! abcde #f)
(set! abcde #\c)
(set! abcde "yolo")
(set! abcde (set! abcde "yolo"))
(set! abcde (if #t 12))
(set! abcde '())
(let-syntax ((do (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) '#\newline)
(let-syntax ((set! (syntax-rules (g) (#(#t ...) #(123 ... . yolo))))) (if #\newline #t #f))
(let-syntax () '(#\newline))
(let-syntax () '#t)
(let-syntax () '#\newline)
(let-syntax ((define-integrable (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) 123.45345)
(let-syntax ((define (syntax-rules (...) (#(#t ...) #(123 ... . yolo))))) (if "yolo" '()))
(let-syntax () (if #f #t 12.123123))
(let-syntax () ',@ yolo)
(let-syntax ((define (syntax-rules (...) (#(#t ...) #(123 ... . yolo))))) (if '() #t #f))
(let-syntax ((define-macro (syntax-rules ()))) ''())
(let-syntax () (let-syntax () '#\newline))
(let-syntax () (if #f #t 12.123123))
(let-syntax ((delay (syntax-rules (e d) (("yolo") #(123 ... . yolo)) (((at c^) ...) #f)))) (if #f #t 12.123123))
(let-syntax ((or (syntax-rules (e d) (("yolo") #(123 ... . yolo)) (((at c^) ...) #f)))) (let-syntax () '#\newline))
(let-syntax ((define (syntax-rules (g) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) (if '(1) "yolo" #f))
(let-syntax () (set! abcde '(#\newline #\c "yolo" . attr)))
(let-syntax () '(a b #\c 12.34 fea12))
(let-syntax () (let-syntax ((do (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) '#\newline))
(let-syntax () ',@ yolo)
((if #f #t 12.123123))
((if #f #t #f) (let-syntax () (if #f #t 12.123123)))
('#\c)
((let-syntax () '(a b #\c 12.34 fea12)) (set! abcde (if #t 12)))
('fsdfsdf '())
((if #f #t 12.123123))
((if #t #t #f) 123.45345)
(123.45345)
((set! abcde '()) (set! abcde 12.123123))
((let-syntax ((define (syntax-rules (g) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) (if '(1) "yolo" #f)))
('"yolo")
('fsdfsdf '"yolo")
('(() . ()))
('#b0)
((if #f '()) '((())))
((let-syntax () '#\newline))
((if #t 12.123123 #f))
('fsdfsdf)
('fsdfsdf)
((set! abcde #f) (if #f #t 12.123123))
((if #f #t 12.123123))
((if #f #t #f))
((let-syntax ((define-macro (syntax-rules ()))) ''()) (if #f '()))
((set! abcde (if #t 12)))
((let-syntax ((define-integrable (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) 123.45345) (if #f '()))
((if #f #t 12.123123) ', ())
((if '"yolo" #t #f) '#o#i777+100i)
(#\newline #t)
((set! abcde 12.123123))
((let-syntax ((define (syntax-rules (...) (#(#t ...) #(123 ... . yolo))))) (if '() #t #f)) '())
((if '(1) "yolo" #f))
('#f (let-syntax ((define-integrable (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) 123.45345))
((set! abcde (if #t 12)))
((let-syntax () '(#\newline)) (set! abcde (set! abcde "yolo")))
((if #f #t 12.123123))
((if '(1) "yolo" #f) '#o#i777+100i)
((let-syntax () (if #f #t 12.123123)))
((if 123 #t #f))
('"yolo")
(',@ yolo)
((let-syntax ((define-integrable (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) 123.45345))
((if #t #t #f))
(123)
(123.45345)
((let-syntax ((define (syntax-rules (...) (#(#t ...) #(123 ... . yolo))))) (if "yolo" '())) '(() . 123.234))
('(123 . 456))
((if #f '()) (set! abcde 12.123123))
((if #f #t 12.123123))
('(#\newline) (set! abcde (if #t 12)))
((if #f #t 12.123123))
(begin ((123.45345)))
(or '`())
(and (let-syntax () (let-syntax ((do (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) '#\newline)))
(delay (if '(1) "yolo" #f))
(do () (#t ()) (let-syntax () (let-syntax ((do (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) '#\newline)))
(case '((a b) (c d)) (((123 . 456)) (((if 123 #t #f)))) (else (((if 123 #t #f)))))
(cond (('(() . ())) ((123.45345))) (else (',@())))
(and )
(delay '(() . ()))
(or )
(cond (((let-syntax () (if #f #t 12.123123))) (((if #f #t 12.123123)))) (else (((if #f #t 12.123123)) '((a b) (c d)))))
(cond ((let-syntax ((delay (syntax-rules (e d) (("yolo") #(123 ... . yolo)) (((at c^) ...) #f)))) (if #f #t 12.123123)) ((123) (let-syntax () '#\newline))) (else ((123.45345))))
(cond (('(() . ())) ((123.45345))))
(cond (((if #f #t #f)) => ((if #f #t #f))) (else (#f)))
(case '((a b) (c d)) (((123 . 456)) (((if 123 #t #f)))) (else (#f)))
(begin ((let-syntax ((define-macro (syntax-rules ()))) ''()) #\x))
(cond (('(() . ())) ((123.45345))))
(delay ((if #f #t 12.123123) ', ()))
(case ('(() . ())) (() (((let-syntax ((define-integrable (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) 123.45345)) 'fsdfsdf)))
(cond (if #t #t #f) (else (((if 123 #t #f)))))
(case (if '(1) "yolo" #f) ((()) ((set! abcde '()) '((a b) (c d)))))
(case ((let-syntax ((define (syntax-rules (g) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) (if '(1) "yolo" #f))) (() (((if '(1) "yolo" #f) '#o#i777+100i))))
(begin (((if #f '()) '((())))))
(do () (((set! abcde 12.123123)) ()) ',"yolo" ())
(case ((if #f #t 12.123123)) (() ((set! abcde #t))))
(begin (#f))
(case #t (() (((let-syntax ((define-integrable (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) 123.45345)) 'fsdfsdf)))
(case ((if #f #t 12.123123)) ((#f) (',@())) (else (#f)))
(case ((if #f #t 12.123123))  (else ((if #t 12.123123 #f))))
(cond (('(() . ())) ((set! abcde '()) '((a b) (c d)))) (else ((let-syntax () ',@ yolo) (let-syntax () (let-syntax () '#\newline)))))
(case ('(123 . 456)) ((()) ((set! abcde '()) '((a b) (c d)))))
(or )
(or )
(case '#o#i777+100i  (else (((if #t #t #f) 123.45345))))
(cond (((if #f #t #f)) => ((if #f #t #f))))
(case ('(() . ())) (() (#\x (set! abcde '()))) (else (''())))
(begin (',@()))
(case #t  (else ((let-syntax () ',@ yolo) (let-syntax () (let-syntax () '#\newline)))))
(and )
(case ((set! abcde 12.123123)) (() ((let-syntax ((or (syntax-rules (e d) (("yolo") #(123 ... . yolo)) (((at c^) ...) #f)))) (let-syntax () '#\newline)) ((if #t 12.123123 #f)))) (else ((123.45345))))
(case ((if #f #t 12.123123)) (() ('(() . 123.234) '())))
(or )
(case (let-syntax () (let-syntax ((do (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) '#\newline)) (((() . 123.234)) (((if 123 #t #f)))))
(case '((a b) (c d)) ((#f) (',@())))
(begin (((if 123 #t #f))))
(do ((yu8j<v-13q54&:xy ((set! abcde (if #t 12))) (let-syntax ((define (syntax-rules (...) (#(#t ...) #(123 ... . yolo))))) (if "yolo" '())))) (((if #f #t 12.123123) ', ()) ()))
(begin ('fsdfsdf (let-syntax () '(a b #\c 12.34 fea12))))
(do () (('(123 . 456)) ()))
(cond (let-syntax () (let-syntax ((do (syntax-rules (c e) (#(#t ...) #(123 ... . yolo)) ((ep .  (#t #\newline)) #(#((a8l/&g72>-$1_+^z.k6!=uce*jn<h?s4yd~i0xa3rwfv%9mpbo:5tq a8l/&g72>-$1_+^z.k6!=uce*hn<h?s4yd~i0xa3rwfv%9mpbo:5tq)) . yolo))))) '#\newline)))
(cond (('(() . ())) ((set! abcde '()) '((a b) (c d)))) (else (((if #t #t #f) 123.45345))))
((if #f #t 12.123123) ', ())
